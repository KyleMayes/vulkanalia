name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      error_debug:
        type: boolean
        required: false
        default: false
      force_debug:
        type: boolean
        required: false
        default: false

jobs:

  test-vulkanalia:
    name: Test - Vulkanalia
    runs-on: ubuntu-latest
    env:
      RUST_LOG: info
      RUST_VERSION: 1.64.0
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v2
      # Dependencies
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt
      # Test
      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all-features
      # Test (no_std)
      - name: Cargo Build (vulkanalia-sys/no_std)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path vulkanalia-sys/Cargo.toml --no-default-features
      - name: Cargo Build (vulkanalia/no_std)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path vulkanalia/Cargo.toml --no-default-features
      # Debug
      - name: Debug
        uses: mxschmitt/action-tmate@v3
        if: ${{ (failure() && inputs.error_debug) || inputs.force_debug }}

  format-vulkanalia:
    name: Format - Vulkanalia
    runs-on: ubuntu-latest
    env:
      RUST_LOG: info
      RUST_VERSION: 1.64.0
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v2
      # Dependencies
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt
      # Format
      - name: Cargo Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --verbose -- --check

  clippy-vulkanalia:
    name: Clippy - Vulkanalia
    runs-on: ubuntu-latest
    env:
      RUST_LOG: info
      RUST_VERSION: 1.64.0
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v2
      # Dependencies
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt
      # Clippy
      - name: Cargo Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  check-generator:
    name: Check - Generator
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v2
      # Dependencies
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 14
      # Check
      - name: ktlint Check
        working-directory: ./generator
        run: ./gradlew check

  check-bindings:
    name: Check - Bindings
    runs-on: ubuntu-latest
    env:
      RUST_LOG: info
      RUST_VERSION: 1.72.0
      BINDGEN_VERSION: 0.68.1
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v2
      # Dependencies
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: 16
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Cache bindgen
        id: cache-bindgen
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin/bindgen
          key: ${{ runner.os }}-${{ env.RUST_VERSION }}-${{ env.BINDGEN_VERSION }}
      - name: Install bindgen
        uses: actions-rs/cargo@v1
        if: steps.cache-bindgen.outputs.cache-hit != 'true'
        with:
          command: install
          args: bindgen-cli --version ${{ env.BINDGEN_VERSION }}
      # Check
      - name: Check Bindings
        working-directory: ./generator
        run: ./gradlew run --args="--directory=.. check"
      # Debug
      - name: Debug
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
